// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing addDocumentEvents verify document events 1`] = `<div />`;

exports[`Testing addDocumentEvents verify document events 2`] = `<div />`;

exports[`Testing addDropzoneEvents add 1 event 1`] = `
<div>
  <svg>
    <rect />
  </svg>
</div>
`;

exports[`Testing addDropzoneEvents add 2 events 1`] = `
<div>
  <svg>
    <rect />
    <rect />
  </svg>
</div>
`;

exports[`Testing addDropzones verify dropzones 1`] = `
<div>
  <svg
    class="qviz"
    height="180"
    style="max-width: fit-content;"
    width="260"
  >
    <style>
      
    line,
    circle,
    rect {
        stroke: #000000;
        stroke-width: 1;
    }
    text {
        fill: #000000;
        dominant-baseline: middle;
        text-anchor: middle;
        font-family: Arial;
    }
    .control-dot {
        fill: #000000;
    }
    .oplus line, .oplus circle {
        fill: #FFFFFF;
        stroke-width: 2;
    }
    .gate-unitary {
        fill: #D9F1FA;
    }
    .gate-measure {
        fill: #FFDE86;
    }
    rect.gate-swap {
        fill: transparent;
        stroke: transparent;
    }
    .arc-measure {
        stroke: #000000;
        fill: none;
        stroke-width: 1;
    }
    .register-classical {
        stroke-width: 0.5;
    }
    
    .hidden {
        display: none;
    }
    .classically-controlled-unknown {
        opacity: 0.25;
    }

    
    .classically-controlled-one .classical-container,
    .classically-controlled-one .classical-line {
        stroke: #4059BD;
        stroke-width: 1.3;
        fill: #4059BD;
        fill-opacity: 0.1;
    }
    .classically-controlled-zero .classical-container,
    .classically-controlled-zero .classical-line {
        stroke: #C40000;
        stroke-width: 1.3;
        fill: #C40000;
        fill-opacity: 0.1;
    }
    
    .classically-controlled-btn {
        cursor: pointer;
    }
    .classically-controlled-unknown .classically-controlled-btn {
        fill: #E5E5E5;
    }
    .classically-controlled-one .classically-controlled-btn {
        fill: #4059BD;
    }
    .classically-controlled-zero .classically-controlled-btn {
        fill: #C40000;
    }
    
    .classically-controlled-btn text {
        dominant-baseline: middle;
        text-anchor: middle;
        stroke: none;
        font-family: Arial;
    }
    .classically-controlled-unknown .classically-controlled-btn text {
        fill: #000000;
    }
    .classically-controlled-one .classically-controlled-btn text {
        fill: #FFFFFF;
    }
    .classically-controlled-zero .classically-controlled-btn text {
        fill: #FFFFFF;
    }
    
    .qviz .gate-collapse,
    .qviz .gate-expand {
        opacity: 0;
        transition: opacity 1s;
    }

    .qviz:hover .gate-collapse,
    .qviz:hover .gate-expand {
        visibility: visible;
        opacity: 0.2;
        transition: visibility 1s;
        transition: opacity 1s;
    }

    .gate-expand, .gate-collapse {
        cursor: pointer;
    }

    .gate-collapse circle,
    .gate-expand circle {
        fill: white;
        stroke-width: 2px;
        stroke: black;
    }
    .gate-collapse path,
    .gate-expand path {
        stroke-width: 4px;
        stroke: black;
    }

    .gate:hover &gt; .gate-collapse,
    .gate:hover &gt; .gate-expand {
        visibility: visible;
        opacity: 1;
        transition: opacity 1s;
    }
    
    .dropzone {
        fill: transparent;
        stroke: transparent;
    }
    .dropzone:hover{
        fill: red;
        opacity: 25%;
    }
    text {
        user-select: none;
    }
    .copying {
        cursor: copy;
    }
    .moving {
        cursor: move;
    }
    .detail-panel {
        display: flex;
        align-content: center;
        gap: 12px;
    }.dropzone {
        fill: transparent;
        stroke: transparent;
    }
    .dropzone:hover{
        fill: red;
        opacity: 25%;
    }
    text {
        user-select: none;
    }
    .copying {
        cursor: copy;
    }
    .moving {
        cursor: move;
    }
    .detail-panel {
        display: flex;
        align-content: center;
        gap: 12px;
    }
    g.gate:not([data-expanded=true]) rect {
        cursor: grab;
    }
    g.gate:not([data-expanded=true]) circle {
        cursor: grab;
    }
    
    </style>
    <g>
      <text
        dominant-baseline="middle"
        font-size="16"
        text-anchor="start"
        x="20"
        y="40"
      >
        |0⟩
      </text>
      <text
        dominant-baseline="middle"
        font-size="16"
        text-anchor="start"
        x="20"
        y="100"
      >
        |0⟩
      </text>
    </g>
    <g>
      <g>
        <line
          x1="40"
          x2="260"
          y1="40"
          y2="40"
        />
        <text
          dominant-baseline="hanging"
          font-size="75%"
          text-anchor="start"
          x="40"
          y="24"
        >
          q0
        </text>
      </g>
      <g>
        <line
          x1="40"
          x2="260"
          y1="100"
          y2="100"
        />
        <text
          dominant-baseline="hanging"
          font-size="75%"
          text-anchor="start"
          x="40"
          y="84"
        >
          q1
        </text>
      </g>
      <g>
        <line
          class="register-classical"
          x1="221"
          x2="221"
          y1="100"
          y2="139"
        />
        <line
          class="register-classical"
          x1="219"
          x2="219"
          y1="100"
          y2="141"
        />
        <line
          class="register-classical"
          x1="221"
          x2="260"
          y1="139"
          y2="139"
        />
        <line
          class="register-classical"
          x1="219"
          x2="260"
          y1="141"
          y2="141"
        />
      </g>
    </g>
    <g>
      <g
        class="gate"
        data-id="0"
        data-zoom-in="false"
        data-zoom-out="false"
      >
        <g>
          <g>
            <rect
              class="gate-unitary"
              height="40"
              width="40"
              x="80"
              y="20"
            />
            <text
              font-size="14"
              x="100"
              y="40"
            >
              H
            </text>
          </g>
        </g>
        <rect
          class="dropzone"
          data-dropzone-position="left"
          data-id="0"
          height="0"
          width="10"
          x="-10"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="right"
          data-id="0"
          height="0"
          width="10"
          x="0"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="left"
          data-id="0"
          height="0"
          width="10"
          x="-10"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="right"
          data-id="0"
          height="0"
          width="10"
          x="0"
          y="0"
        />
      </g>
      <g
        class="gate"
        data-id="1"
        data-zoom-in="false"
        data-zoom-out="false"
      >
        <line
          x1="160"
          x2="160"
          y1="40"
          y2="100"
        />
        <circle
          class="control-dot"
          cx="160"
          cy="40"
          r="5"
        />
        <g
          class="oplus"
        >
          <circle
            cx="160"
            cy="100"
            r="15"
          />
          <line
            x1="160"
            x2="160"
            y1="85"
            y2="115"
          />
          <line
            x1="145"
            x2="175"
            y1="100"
            y2="100"
          />
        </g>
        <rect
          class="dropzone"
          data-dropzone-position="left"
          data-id="1"
          height="0"
          width="10"
          x="-10"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="right"
          data-id="1"
          height="0"
          width="10"
          x="0"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="left"
          data-id="1"
          height="0"
          width="10"
          x="-10"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="right"
          data-id="1"
          height="0"
          width="10"
          x="0"
          y="0"
        />
      </g>
      <g
        class="gate"
        data-id="2"
        data-zoom-in="false"
        data-zoom-out="false"
      >
        <g>
          <rect
            class="gate-measure"
            height="40"
            width="40"
            x="200"
            y="80"
          />
          <path
            class="arc-measure"
            d="M 235 102 A 15 12 0 0 0 205 102"
          />
          <line
            x1="220"
            x2="232"
            y1="108"
            y2="88"
          />
        </g>
        <rect
          class="dropzone"
          data-dropzone-position="left"
          data-id="2"
          height="0"
          width="10"
          x="-10"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="right"
          data-id="2"
          height="0"
          width="10"
          x="0"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="left"
          data-id="2"
          height="0"
          width="10"
          x="-10"
          y="0"
        />
        <rect
          class="dropzone"
          data-dropzone-position="right"
          data-id="2"
          height="0"
          width="10"
          x="0"
          y="0"
        />
      </g>
    </g>
  </svg>
</div>
`;

exports[`Testing addMouseEvents verify mouse events 1`] = `
<div>
  <svg
    class="qviz"
    height="180"
    style="max-width: fit-content;"
    width="140"
  >
    <style>
      
    line,
    circle,
    rect {
        stroke: #000000;
        stroke-width: 1;
    }
    text {
        fill: #000000;
        dominant-baseline: middle;
        text-anchor: middle;
        font-family: Arial;
    }
    .control-dot {
        fill: #000000;
    }
    .oplus line, .oplus circle {
        fill: #FFFFFF;
        stroke-width: 2;
    }
    .gate-unitary {
        fill: #D9F1FA;
    }
    .gate-measure {
        fill: #FFDE86;
    }
    rect.gate-swap {
        fill: transparent;
        stroke: transparent;
    }
    .arc-measure {
        stroke: #000000;
        fill: none;
        stroke-width: 1;
    }
    .register-classical {
        stroke-width: 0.5;
    }
    
    .hidden {
        display: none;
    }
    .classically-controlled-unknown {
        opacity: 0.25;
    }

    
    .classically-controlled-one .classical-container,
    .classically-controlled-one .classical-line {
        stroke: #4059BD;
        stroke-width: 1.3;
        fill: #4059BD;
        fill-opacity: 0.1;
    }
    .classically-controlled-zero .classical-container,
    .classically-controlled-zero .classical-line {
        stroke: #C40000;
        stroke-width: 1.3;
        fill: #C40000;
        fill-opacity: 0.1;
    }
    
    .classically-controlled-btn {
        cursor: pointer;
    }
    .classically-controlled-unknown .classically-controlled-btn {
        fill: #E5E5E5;
    }
    .classically-controlled-one .classically-controlled-btn {
        fill: #4059BD;
    }
    .classically-controlled-zero .classically-controlled-btn {
        fill: #C40000;
    }
    
    .classically-controlled-btn text {
        dominant-baseline: middle;
        text-anchor: middle;
        stroke: none;
        font-family: Arial;
    }
    .classically-controlled-unknown .classically-controlled-btn text {
        fill: #000000;
    }
    .classically-controlled-one .classically-controlled-btn text {
        fill: #FFFFFF;
    }
    .classically-controlled-zero .classically-controlled-btn text {
        fill: #FFFFFF;
    }
    
    .qviz .gate-collapse,
    .qviz .gate-expand {
        opacity: 0;
        transition: opacity 1s;
    }

    .qviz:hover .gate-collapse,
    .qviz:hover .gate-expand {
        visibility: visible;
        opacity: 0.2;
        transition: visibility 1s;
        transition: opacity 1s;
    }

    .gate-expand, .gate-collapse {
        cursor: pointer;
    }

    .gate-collapse circle,
    .gate-expand circle {
        fill: white;
        stroke-width: 2px;
        stroke: black;
    }
    .gate-collapse path,
    .gate-expand path {
        stroke-width: 4px;
        stroke: black;
    }

    .gate:hover &gt; .gate-collapse,
    .gate:hover &gt; .gate-expand {
        visibility: visible;
        opacity: 1;
        transition: opacity 1s;
    }
    
    .dropzone {
        fill: transparent;
        stroke: transparent;
    }
    .dropzone:hover{
        fill: red;
        opacity: 25%;
    }
    text {
        user-select: none;
    }
    .copying {
        cursor: copy;
    }
    .moving {
        cursor: move;
    }
    .detail-panel {
        display: flex;
        align-content: center;
        gap: 12px;
    }.dropzone {
        fill: transparent;
        stroke: transparent;
    }
    .dropzone:hover{
        fill: red;
        opacity: 25%;
    }
    text {
        user-select: none;
    }
    .copying {
        cursor: copy;
    }
    .moving {
        cursor: move;
    }
    .detail-panel {
        display: flex;
        align-content: center;
        gap: 12px;
    }
    g.gate:not([data-expanded=true]) rect {
        cursor: grab;
    }
    g.gate:not([data-expanded=true]) circle {
        cursor: grab;
    }
    
    </style>
    <g>
      <text
        dominant-baseline="middle"
        font-size="16"
        text-anchor="start"
        x="20"
        y="40"
      >
        |0⟩
      </text>
      <text
        dominant-baseline="middle"
        font-size="16"
        text-anchor="start"
        x="20"
        y="100"
      >
        |0⟩
      </text>
    </g>
    <g>
      <g>
        <line
          x1="40"
          x2="140"
          y1="40"
          y2="40"
        />
        <text
          dominant-baseline="hanging"
          font-size="75%"
          text-anchor="start"
          x="40"
          y="24"
        >
          q0
        </text>
      </g>
      <g>
        <line
          x1="40"
          x2="140"
          y1="100"
          y2="100"
        />
        <text
          dominant-baseline="hanging"
          font-size="75%"
          text-anchor="start"
          x="40"
          y="84"
        >
          q1
        </text>
      </g>
      <g>
        <line
          class="register-classical"
          x1="101"
          x2="101"
          y1="100"
          y2="139"
        />
        <line
          class="register-classical"
          x1="99"
          x2="99"
          y1="100"
          y2="141"
        />
        <line
          class="register-classical"
          x1="101"
          x2="140"
          y1="139"
          y2="139"
        />
        <line
          class="register-classical"
          x1="99"
          x2="140"
          y1="141"
          y2="141"
        />
      </g>
    </g>
    <g>
      <g
        class="gate"
        data-id="0"
        data-zoom-in="false"
        data-zoom-out="false"
      >
        <g>
          <g>
            <rect
              class="gate-unitary"
              height="40"
              width="40"
              x="80"
              y="20"
            />
            <text
              font-size="14"
              x="100"
              y="40"
            >
              H
            </text>
          </g>
        </g>
      </g>
      <g
        class="gate"
        data-id="1"
        data-zoom-in="false"
        data-zoom-out="false"
      >
        <g>
          <rect
            class="gate-measure"
            height="40"
            width="40"
            x="80"
            y="80"
          />
          <path
            class="arc-measure"
            d="M 115 102 A 15 12 0 0 0 85 102"
          />
          <line
            x1="100"
            x2="112"
            y1="108"
            y2="88"
          />
        </g>
      </g>
    </g>
  </svg>
</div>
`;

exports[`Testing createDropzone create dropzone on the left 1`] = `
<rect
  class="dropzone"
  data-dropzone-position="left"
  data-id="0"
  height="20"
  width="20"
  x="0"
  y="0"
/>
`;

exports[`Testing createDropzone create dropzone on the right 1`] = `
<rect
  class="dropzone"
  data-dropzone-position="right"
  data-id="0"
  height="20"
  width="20"
  x="0"
  y="0"
/>
`;

exports[`Testing createLeftDropzone create left dropzone 1`] = `
<rect
  class="dropzone"
  data-dropzone-position="left"
  data-id="0"
  height="20"
  width="10"
  x="-10"
  y="0"
/>
`;

exports[`Testing createRightDropzone create dropzone right 1`] = `
<rect
  class="dropzone"
  data-dropzone-position="right"
  data-id="0"
  height="20"
  width="10"
  x="20"
  y="0"
/>
`;

exports[`Testing cursorCopy turn off copy cursor 1`] = `
<div
  class="copying"
/>
`;

exports[`Testing cursorCopy turn off copy cursor 2`] = `
<div
  class=""
/>
`;

exports[`Testing cursorCopy turn on and off copy cursor 1`] = `
<div
  class=""
/>
`;

exports[`Testing cursorCopy turn on and off copy cursor 2`] = `
<div
  class=""
/>
`;

exports[`Testing cursorCopy turn on copy cursor 1`] = `<div />`;

exports[`Testing cursorCopy turn on copy cursor 2`] = `
<div
  class="copying"
/>
`;

exports[`Testing cursorMove turn off move cursor 1`] = `
<div
  class="moving"
/>
`;

exports[`Testing cursorMove turn off move cursor 2`] = `
<div
  class=""
/>
`;

exports[`Testing cursorMove turn on and off move cursor 1`] = `
<div
  class=""
/>
`;

exports[`Testing cursorMove turn on and off move cursor 2`] = `
<div
  class=""
/>
`;

exports[`Testing cursorMove turn on move cursor 1`] = `<div />`;

exports[`Testing cursorMove turn on move cursor 2`] = `
<div
  class="moving"
/>
`;

exports[`Testing getGateElems get 2 gates 1`] = `
Array [
  <g
    class="gate"
    data-id="0"
    data-zoom-in="false"
    data-zoom-out="false"
  >
    <g>
      <g>
        <rect
          class="gate-unitary"
          height="40"
          width="40"
          x="80"
          y="20"
        />
        <text
          font-size="14"
          x="100"
          y="40"
        >
          H
        </text>
      </g>
    </g>
  </g>,
  <g
    class="gate"
    data-id="1"
    data-zoom-in="false"
    data-zoom-out="false"
  >
    <g>
      <rect
        class="gate-measure"
        height="40"
        width="40"
        x="80"
        y="80"
      />
      <path
        class="arc-measure"
        d="M 115 102 A 15 12 0 0 0 85 102"
      />
      <line
        x1="100"
        x2="112"
        y1="108"
        y2="88"
      />
    </g>
  </g>,
]
`;

exports[`Testing getGateElems get 3 gates 1`] = `
Array [
  <g
    class="gate"
    data-id="0"
    data-zoom-in="false"
    data-zoom-out="false"
  >
    <g>
      <g>
        <rect
          class="gate-unitary"
          height="40"
          width="40"
          x="80"
          y="20"
        />
        <text
          font-size="14"
          x="100"
          y="40"
        >
          H
        </text>
      </g>
    </g>
  </g>,
  <g
    class="gate"
    data-id="1"
    data-zoom-in="false"
    data-zoom-out="false"
  >
    <line
      x1="160"
      x2="160"
      y1="40"
      y2="100"
    />
    <circle
      class="control-dot"
      cx="160"
      cy="40"
      r="5"
    />
    <g
      class="oplus"
    >
      <circle
        cx="160"
        cy="100"
        r="15"
      />
      <line
        x1="160"
        x2="160"
        y1="85"
        y2="115"
      />
      <line
        x1="145"
        x2="175"
        y1="100"
        y2="100"
      />
    </g>
  </g>,
  <g
    class="gate"
    data-id="2"
    data-zoom-in="false"
    data-zoom-out="false"
  >
    <g>
      <rect
        class="gate-measure"
        height="40"
        width="40"
        x="200"
        y="80"
      />
      <path
        class="arc-measure"
        d="M 235 102 A 15 12 0 0 0 205 102"
      />
      <line
        x1="220"
        x2="232"
        y1="108"
        y2="88"
      />
    </g>
  </g>,
]
`;

exports[`Testing getWireElems get 2 wires 1`] = `
Array [
  <g>
    <line
      x1="40"
      x2="260"
      y1="40"
      y2="40"
    />
    <text
      dominant-baseline="hanging"
      font-size="75%"
      text-anchor="start"
      x="40"
      y="24"
    >
      q0
    </text>
  </g>,
  <g>
    <line
      x1="40"
      x2="260"
      y1="100"
      y2="100"
    />
    <text
      dominant-baseline="hanging"
      font-size="75%"
      text-anchor="start"
      x="40"
      y="84"
    >
      q1
    </text>
  </g>,
]
`;

exports[`Testing handleGateMouseDown copying, ctrlKey is true 1`] = `
<div
  class="copying"
/>
`;

exports[`Testing handleGateMouseDown moving, ctrlKey is false 1`] = `
<div
  class="moving"
/>
`;
